--[[-- INFO -------------------------------------------------------------------
	File				: avo_utils
	Description	: Various game utilities
	Credits			: aVo, Alundaio
	Revision		: 0.1
	Change Date	: 07.25.2013
--]] --------------------------------------------------------------------------
--/----------------------------------------------------------------------------
--/ Variables
--/----------------------------------------------------------------------------
local self_name = script_name()
local sim = alife()
--/----------------------------------------------------------------------------
--/ Initialization
--/----------------------------------------------------------------------------
function _init()
	init_slots() -- subscribe to game events
	db.avo.online = {} -- database of online objects
	db.avo.online.stalkers = {} -- database of online stalkers
	db.avo.online.monsters = {} -- database of online monsters
end

function init_slots()
	slot("stalker_net_spawn", this.on_stalker_net_spawn)
	slot("stalker_net_destroy", this.on_stalker_net_destroy)
end

function on_stalker_net_spawn(motivator_binder, se_object)
	local npc = motivator_binder.object
	table.insert(db.avo.online.stalkers, npc:id()) -- add to db of online stalkers
end

function on_stalker_net_destroy(motivator_binder)
	local npc = motivator_binder.object
	for i = #db.avo.online.stalkers, 1, -1 do -- remove from db
		if (npc:id() == db.avo.online.stalkers[i]) then
			table.remove(db.avo.online.stalkers,i)
			break
		end
	end
end

--/----------------------------------------------------------------------------
--/ GAME UTILS
--/----------------------------------------------------------------------------
--/ find stalker and distance closest to npc. Can pass npc, or "cam" for actor
function get_nearest_stalker(npc, max_dist)
	if not max_dist then max_dist = 500 end -- actual game dist will be sqrt of this (~22m)
	local stalker, dist, nearest_stalker, nearest_dist, pos
	for i=1, #db.avo.online.stalkers do
		repeat -- added
		stalker = db.storage[db.avo.online.stalkers[i]] and db.storage[db.avo.online.stalkers[i]].object or level.object_by_id(db.avo.online.stalkers[i])
		if (stalker and stalker:alive()) then
			pos = npc == "cam" and device().cam_pos or npc:position()
			dist = pos:distance_to_sqr(stalker:position())
			if dist > max_dist then break end -- added
			if not (nearest_dist) then
				nearest_dist = dist
				nearest_stalker = stalker
			end

			if (dist < nearest_dist) then
				nearest_dist = dist
				nearest_stalker = stalker
			end
		end
		until true -- added
	end
	return nearest_stalker, nearest_dist
end
--/ get npc actor is aiming at. 
function get_target_npc()
	local obj = get_target_object()
	if obj and IsStalker(obj) then -- TODO: stop using _g.IsStalker
		return obj
	end
end
--/ get object actor is aiming at (uses xray extensions for level.get_target_obj)
function get_target_object()
	if level.get_target_obj then
		return level.get_target_obj()
	end
end

--/ Switch online or offline
function switch_online(id)
	if id < 1 or id > 65535 then return end
	if sim then
		sim:set_switch_online(id,true)
		sim:set_switch_offline(id,false)
	end
end
function switch_offline(id)
	if id < 1 or id > 65535 then return end
	if sim then
		sim:set_switch_online(id,false)
		sim:set_switch_offline(id,true)
	end
end

--/----------------------------------------------------------------------------
--/ Check if object is a weapon. TODO: refactor and build tables of weapons, items, etc
--/----------------------------------------------------------------------------
function item_is_fa(o,c)
	if not c then
		c = o and o:clsid()
	end
	local t = {
	[clsid.wpn_pm_s] = true,
	[clsid.wpn_walther_s] = true,
	[clsid.wpn_usp45_s] = true,
	[clsid.wpn_hpsa_s] = true,
	[clsid.wpn_bm16_s] = true,
	[clsid.wpn_shotgun_s] = true,
	[clsid.wpn_auto_shotgun_s] = true,
	[clsid.wpn_ak74_s] = true,
	[clsid.wpn_lr300_s] = true,
	[clsid.wpn_groza_s] = true,
	[clsid.wpn_val_s] = true,
	[clsid.wpn_vintorez_s] = true,
	[clsid.wpn_svu_s] = true,
	[clsid.wpn_svd_s] = true,
	[clsid.wpn_rg6_s] = true,
	[clsid.wpn_rpg7_s] = true,
	[clsid.wpn_knife_s] = true}
	if c and t[c] then
		return true
	end
	return false
end
